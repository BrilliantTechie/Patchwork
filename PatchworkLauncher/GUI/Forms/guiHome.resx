<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rNAAAAAASUVORK5CYII=
</value>
  </data>
</root>